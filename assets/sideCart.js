const add=(t,e)=>t+e,minus=(t,e)=>t-e,notZero=t=>t>0,addClass=(t,e)=>t.classList.add(e),removeClass=(t,e)=>t.classList.remove(e),lockDocument=()=>addClass(document.body,"locked"),unLockDocument=()=>{return t=document.body,e="locked",t.classList.remove(e);var t,e},activateCart=t=>addClass(t,"activate"),deactivateCart=t=>addClass(t,"deactivate"),openSideCart=(t,e)=>{t.dataset.active="true",addSideCartListeners(t,e)},closeSideCart=t=>{t.dataset.active="false"},getVariant=(t,e)=>t.querySelector(`[data-variantid="${e}"]`),getSectionElement=t=>(new DOMParser).parseFromString(t,"text/html").querySelector("body").firstChild,component=t=>document.querySelector(`[data-component-${t}]`),componentQuery=t=>e=>t.querySelector(`[data-component-${e}]`),quantityInputSelectors=["itemQuantityPlus","itemQuantityminus","itemQuantityDisplay"],cartSelectors={quantityInputSelectors:quantityInputSelectors},sideCartLink=component("sideCartLink"),sideCart=component("sideCart"),closeSideCartButton=component("closeSideCartButton"),sideCartPriceTotal=component("total"),updateInnerText=(t,e)=>fastdom.mutate((()=>{t.innerText=e})),removeEl=t=>fastdom.mutate((()=>{t&&t.remove()})),appendTo=(t,e)=>fastdom.mutate((()=>{t&&t.append(e)})),updateNumericText=(t,e)=>{const a=e.toString();a!=t.innerText&&updateInnerText(t,a)},updateTotal=(t,e)=>{const a=t,n=e.total_price;updateNumericText(a,n)},updateProductQuantity=(t,e)=>{updateNumericText(t,e)},increaseQuantity=t=>parseInt(t.innerText)+1,decreaseQuantity=t=>parseInt(t.innerText)-1,deleteProduct=t=>{const e=getVariant(document.body,t);var a;e&&(a=e,fastdom.mutate((()=>{a&&a.remove()})))},increaseCartItemQuantity=(t,e)=>{updateItem({id:t.toString(),quantity:e},updateNumericText)},decreaseCartItemQuantity=(t,e)=>{e>0?updateItem({id:t.toString(),quantity:e},updateNumericText):removeItem(t),dispatchCartUpdate("cart:item:quantity:decrease")},addItemToCart=(t,e,a)=>{const n=getVariant(document.body,t),i=e.quantity;n?increaseCartItemQuantity(t,i):addNewToCart(t,a)},addNewToCart=async(t,e)=>{const a=await fetch("/?sections=side-cart"),n=await a.json(),i=(d=n["side-cart"],(new DOMParser).parseFromString(d,"text/html").querySelector("body").firstChild);var d;const r=e?.querySelector("[data-component-cartItems]"),s=getVariant(i,t);var c,o;throw c=r,o=s,fastdom.mutate((()=>{c&&c.append(o)})),new Error(`Failed to get request, Shopify returned ${a.status} ${a.statusText}`)},updateItem=async(t,e)=>{const a=await fetch("/cart/change.json",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(t)}),n=await a.json();return e&&e(document.querySelector(`[data-id="${t.id}"] [data-component-itemquantitydisplay]`),t.quantity),dispatchCartUpdate("cart:item:quantity:increase",n),n},removeItem=async t=>{const e=await fetch("/cart/change.json",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({id:t.toString(),quantity:0})}),a=await e.json();return deleteProduct(t),dispatchCartUpdate("cart:item:delete",a),a},dispatchCartOpen=()=>document.dispatchEvent(new CustomEvent("cart:open",{bubbles:!0})),dispatchCartClose=()=>document.dispatchEvent(new CustomEvent("cart:close",{bubbles:!0})),dispatchCartUpdate=(t,e)=>document.dispatchEvent(new CustomEvent("cart:update",{bubbles:!0,detail:{event:t,cart:e}})),dispatchCartItemIncrease=(t,e)=>{document.dispatchEvent(new CustomEvent("cart:item:quantity:increase",{bubbles:!0,detail:{quantity:t,id:e}}))},dispatchCartItemDecrease=(t,e)=>{document.dispatchEvent(new CustomEvent("cart:item:quantity:decrease",{bubbles:!0,detail:{quantity:t,id:e}}))},addItemListeners=(t,e)=>{const a=parseInt(t.dataset.variantid);addQuantityListeners(null==t?void 0:t.querySelector("[data-component-itemquantityselector]"),a,e)},addPlusButtonListener=(t,e,a)=>t.addEventListener("click",(()=>{return t=increaseQuantity(e),n=a,void document.dispatchEvent(new CustomEvent("cart:item:quantity:increase",{bubbles:!0,detail:{quantity:t,id:n}}));var t,n})),addMinusButtonListener=(t,e,a)=>t.addEventListener("click",(()=>{var t,n;t=decreaseQuantity(e),n=a,document.dispatchEvent(new CustomEvent("cart:item:quantity:decrease",{bubbles:!0,detail:{quantity:t,id:n}}))})),addQuantityListeners=(t,e,a)=>{const[n,i,d]=a.quantityInputSelectors.map((r=t,t=>r.querySelector(`[data-component-${t}]`)));var r;addPlusButtonListener(n,d,e),addMinusButtonListener(i,d,e)},addSideCartListeners=(t,e)=>{t.querySelectorAll("[data-component-cartItem]").forEach((t=>addItemListeners(t,e)))};sideCartLink&&sideCartLink.addEventListener("click",(t=>{t.preventDefault(),document.dispatchEvent(new CustomEvent("cart:open",{bubbles:!0}))})),closeSideCartButton&&closeSideCartButton.addEventListener("click",(t=>{t.preventDefault(),document.dispatchEvent(new CustomEvent("cart:close",{bubbles:!0}))})),document.addEventListener("cart:open",(()=>sideCart&&openSideCart(sideCart,cartSelectors))),document.addEventListener("cart:close",(()=>sideCart&&closeSideCart(sideCart))),document.addEventListener("cart:update",(t=>{t.detail.cart&&sideCartPriceTotal&&updateTotal(sideCartPriceTotal,t.detail.cart)})),document.addEventListener("cart:item:quantity:increase",(t=>{increaseCartItemQuantity(t.detail.id,t.detail.quantity)})),document.addEventListener("cart:item:quantity:decrease",(t=>{return e=t.detail.id,(a=t.detail.quantity)>0?updateItem({id:e.toString(),quantity:a},updateNumericText):removeItem(e),void dispatchCartUpdate("cart:item:quantity:decrease");var e,a})),document.addEventListener("cart:item:add",(t=>{addItemToCart(t.detail.id,t.detail.product,sideCart)}));